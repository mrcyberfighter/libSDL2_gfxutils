{"name":"Libsdl2 gfxutils","tagline":"libSDL2_gfxutils a SDL2_gfx helper functions set for forms generating and animation library.","body":"# SDL2_gfxutils presentation\r\n\r\n| :informations: | SDL2_gfxutils |\r\n|----------------|---------------|\r\n:library: | **SDL2_gfxutils**\r\n:version: | 2.0.0\r\n:platform: | **Linux**, **Windows** and **Posix** compliant (not tested).\r\n:compiler: | **gcc**, **g++**, **clang**, **mingw32**, **mingw-w64-686**, **mingw-w64-x86_64**.\r\n:synopsis: | **SDL2_gfxutils** a **SDL2_gfx** forms generating and manipulating helper functions set\r\n:Licence: | GPLv3\r\n:author: | Eddie Brüggemann <mrcyberfighter@gmail.com>\r\n\r\n## SDL2_gfxutils brief history\r\n\r\n\r\n**SDL2_gfxutils** is issue from an collection of functions that i have implemented over the years, everytime i had a idea of a form to generate i try to implemented it as a function generating the sequence of coordinates or performing operations on a form.\r\nAt start i implemented my ideas with the *python pygame* module, which is based on the **SDL** library, by start i get only the functions to set a pixel according the a radius and an angle offset, so **SDL2_gfxutils** is a translation of *python* functions into the **C** language and the **SDL2_gfx** standart.\r\n\r\n\r\n**SDL2_gfxutils** has been entirely rewritten after the first version release which suffers under severals bugs and was not handy to use, mostly for animations.\r\n\r\n:note: After the disaster everything are right.\r\n\r\n### The new implementation from SDL2_gfxutils\r\n\r\n\r\nAll forms generating functions now return a **pointer** on a specific **SDL2_gfxutils** type compatible with the generic **SDL2_gfxutils** `Form` type.\r\n\r\nThe **pointers** permit to **manipulate** the forms for **transforming** or **animating** (*rotating*, *scaling*, *translating*, *mirroring*) functions **easily**.\r\n\r\nThe **pointers** can be destroyed at your convienence of course. And this mechanic is massively used in form generating functions. So that no memory space is lost.\r\n\r\nThe generic `Form` type has been change to contains coordinates from type `float`, instead of type `int16_t`, so that the **computation** like *rotating*, *scaling*, *translating*, *mirroring* are now exactly executed.\r\n\r\nThe subtype `Pixel` members are now from type `float`.\r\n\r\n+ Some functions have been removed because they become useless, because of the new pointers system.\r\n\r\n+ Some functions have been added for replacing the missing features, with many advantages, mostly for transforming or animating forms in the SDL2 mainloop.\r\n\r\n+ All functions have been improved, favor of the pointers mechanic.\r\n\r\n## SDL2_gfxutils presentation\r\n\r\n**SDL2_gfxutils** is en extension for the **SDL2_gfx** library helping you for the creation of the fantastics drawing your brain can imagined.\r\n\r\n**SDL2_gfxutils** provide severals functions for severals usages:\r\n\r\n  + A lot of forms generating functions, from the simple **polygons**, through **stars**, to the fantastic **fractals**.\r\n\r\n  + High-level Transforming or animating functions (*rotating*, *scaling*, *translating* and *mirroring*) acting on an entire `Form`.\r\n\r\n  + Low-level Transforming or animating functions (*rotating*, *scaling*, *translating* and *mirroring*) acting on a single `Pixel`.\r\n\r\n  + Memory management and check functions.\r\n\r\n**:note:** I think it's **easy to adapt the SDL2_gfxutils** library to be compatible with **others libraries** than the **SDL2 library**. It is sufficient to adapt the displaying functions (the only which **require** the **SDL2_gfx library** functionalities).\r\n\r\n### Operations functions which transform a form:\r\n\r\n\r\n- **Rotation** of a `Form` around his center from the wanted **degrees**.\r\n\r\n- **Scaling** of a `Form` from the wanted **factor**.\r\n\r\n- **Translation** of a `Form` from the wanted `x` and `y` values.\r\n\r\n- **Mirroring** over the `X` or `Y` **axes** according to an `center` **point**.\r\n\r\n\r\n### Form setters functions which change the settings of a form\r\n\r\n- Setting a new `center` of a `Form` with optionally translating all coordinates.\r\n\r\n- Setting a new `radius` what equal to scaling a `Form` except that instead a factor you can set a new size directly.\r\n\r\n- Setting a new `color` for the `Form` or a `Line`.\r\n\r\n### Form getters functions to get settings of a form\r\n\r\n- Getting the current `Form` `center` value.\r\n\r\n- Getting the current `Form` `color`.\r\n\r\n- Getting the current `Form` `length` (often the **radius**).\r\n\r\n- Getting the current `Form` `orientation` (**offset** defining the incline of a `Form`).\r\n\r\n- Getting the current `Form` `real_length` (value defining the **distance** between the `center` and the **most distant coordinate** from the `center`).\r\n\r\n  **:note:** You can use this member to build bounding boxes for collision detection per example.\r\n\r\n### Displaying forms functions\r\n\r\nEach `Form` type has specific displaying functions.\r\n\r\nUse each `Form` specific displaying function else the result will be undefined.\r\n\r\n**:note:** But you can use the displaying function you want to display a `Form`, something the output is surprising.\r\n\r\n**:note:** For every displaying function it exist a `thickness setttable displaying function` and an `anti-aliasing displaying function` except for the filled forms functions.\r\n\r\n### Length and middle Between 2 Pixels\r\n\r\n- Measure of the length of a `Line`.\r\n\r\n- Get the Middle `Pixel` of a `Line`.\r\n\r\n## Angles\r\n\r\nIn the 2D display from SDL2: the **X axes** goes from left to right and the **Y axes** from up to down.\r\n\r\nFor the multiple used `orientation` parameter from type `float`. Sea the following image to become acquainted with the values and with the conventional angle values.\r\n\r\n![](https://raw.githubusercontent.com/mrcyberfighter/libSDL2_gfxutils/master/mark.png)\r\n\r\n**:note:** You can sea that 3 o'clock represent 0 degrees.\r\n\r\n## Animations advice\r\n\r\nPolygon and forms are not only displayable object but can also be an guideline for the execution of an animation which moving a form trough the way of the lines from the polygon or the form.\r\n\r\n**SDL2_gfxutils** provide an function `compute_trajectory()` with which you can construct an moving line\r\nby moving a form through the pixels of the `positions` array by translating it with the `translate_form()` function.\r\n\r\n## Download SDL2_gfxutils\r\n\r\n\r\nYou can find archive files for following compilers:\r\n\r\n+ **gcc** \r\n  \r\n+ **g++** \r\n  \r\n+ **clang** \r\n  \r\n+ **mingw32** \r\n  \r\n+ **mingw-w64-i686** \r\n  \r\n+ **mingw-w64-x86_64**\r\n\r\nFor **Linux**, **Posix** *compliant systems* (**not tested**) and **Windows** at the [libSDL2_gfxutils homepage](https://raw.githubusercontent.com/mrcyberfighter/libSDL2_gfxutils/master/by-nc.png).  \r\n\r\n\r\n## SDL2_gfxutils Documentation License\r\n\r\nThe libSDL2_gfxutils documentation is licensed under the Creative Commons Attribution-NonCommercial 4.0 International License.\r\n\r\nTo view a copy of this license, visit <http://creativecommons.org/licenses/by-nc/4.0/>.\r\n\r\n![](https://raw.githubusercontent.com/mrcyberfighter/libSDL2_gfxutils/master/by-nc.png)\r\n\r\n## SDL2_gfxutils License: GPLv3.\r\n\r\n**:note:** `SDL2_gfxutils is under copyright from the GNU General Public License.`\r\n\r\n\r\n**SDL2_gfxutils** a **SDL2_gfx** forms generating and manipulating helper functions set.\r\n\r\nCopyright (©) 2016 Brüggemann Eddie <mrcyberfighter@gmail.com>.           \r\n                                                                        \r\n**SDL2_gfxutils** is free software: you can redistribute it and/or modify         \r\n\r\nit under the terms of the GNU General Public License as published by    \r\n\r\nthe Free Software Foundation, either version 3 of the License, or       \r\n\r\n(at your option) any later version.                                     \r\n                                                                        \r\n**SDL2_gfxutils** is distributed in the hope that it will be useful,              \r\n\r\nbut WITHOUT ANY WARRANTY; without even the implied warranty of          \r\n\r\nMERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the            \r\n\r\nGNU General Public License for more details.                             \r\n                                                                        \r\nYou should have received a copy of the GNU General Public License       \r\n\r\nalong with **SDL2_gfxutils**. If not, see <http://www.gnu.org/licenses/>          \r\n\r\n\r\n## Credits\r\n\r\n\r\nThanks to my **mother**, **my family** and **the doctors**.\r\n\r\n**Stay away from drugs:** drugs **destroy** your *brain* and your *life*.\r\n","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}